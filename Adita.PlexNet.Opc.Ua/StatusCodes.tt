<#@ template debug="true" hostspecific="true" language="C#" 
#><#@ assembly name="System.Core" 
#><#@ import namespace="System.Linq" 
#><#@ import namespace="System.Text" 
#><#@ import namespace="System.Collections.Generic" 
#><#@ assembly name="System.Xml.dll" 
#><#@ import namespace="System.Xml" 
#><#@ import namespace="System.Xml" 
#><#@ import namespace="System.IO" 
#><#@ output extension="generated.cs" 
#><# 
var filename = this.Host.ResolvePath(@"Schemas\StatusCodes.csv");
var comma = new[] { ',' };
var quote = new[] { '\"' };
var fields = 
    from l in File.ReadAllLines(filename)
    let s = l.Split(comma, 3)
    select new { Name = s[0], Value = s[1], Message =s[2] };
#>// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 15.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Adita.PlexNet.Opc.Ua
{
    using System.Collections.Generic;

    public static class StatusCodes
    {
        /// <summary>The operation completed successfully.</summary>
        public const uint Good = 0x00000000u;
<# foreach (var f in fields) { #>        /// <summary><#= f.Message.Trim(quote) #></summary>
        public const uint <#= f.Name #> = <#= f.Value #>u;
<# } #>        public static string GetDefaultMessage(uint statusCode)
        {
            string value;
            if (DefaultMessages.TryGetValue(statusCode & 0xFFFF0000, out value))
            {
                return value;
            }
            return "An unexpected error occurred.";
        }
        static Dictionary<uint, string> DefaultMessages = new Dictionary<uint, string>()
        {
            [0x00000000]="The operation completed successfully.",
<# foreach (var f in fields) { #>            [<#= f.Value #>]=<#= f.Message #>,
<# } #>        };
    }
}
